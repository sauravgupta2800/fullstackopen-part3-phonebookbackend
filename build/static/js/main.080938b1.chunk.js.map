{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","value","handleChange","onChange","SuccessToast","message","className","ErrorToast","Button","text","handleClick","onClick","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleSubmit","onSubmit","type","Person","person","handleDelete","name","number","Persons","persons","map","App","useState","setPersons","setNewName","setNewNumber","searchKey","setSearchKey","success","setSuccess","error","setError","useEffect","personService","event","target","preventDefault","oldPersons","oldPersonIdx","findIndex","push","setTimeout","window","confirm","console","log","alert","filter","toLowerCase","includes","updatedPerson","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.080938b1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// const baseUrl = \"http://localhost:3001/persons\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  delete: remove,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport personService from \"./services/persons\";\n\nconst Filter = ({ value, handleChange }) => {\n  return (\n    <div>\n      Filter shown up with:\n      <input value={value} onChange={handleChange} />\n    </div>\n  );\n};\n\nconst SuccessToast = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"success\">\n      <div>Success:</div>\n      {message}\n    </div>\n  );\n};\n\nconst ErrorToast = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      <div>Error:</div>\n      {message}\n    </div>\n  );\n};\n\nconst Button = ({ text, handleClick }) => {\n  return <button onClick={handleClick}>{text}</button>;\n};\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  handleNameChange,\n  handleNumberChange,\n  handleSubmit,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:\n        <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number:\n        <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <div>\n      {person.name}-{person.number}{\" \"}\n      <Button text=\"delete\" handleClick={() => handleDelete(person)} />\n    </div>\n  );\n};\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {persons.map((person) => (\n        <Person key={person.name} person={person} handleDelete={handleDelete} />\n      ))}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    personService.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n\n  const handleAddName = (event) => {\n    event.preventDefault();\n    let oldPersons = [...persons];\n    if (!newName || !newNumber) {\n      alert(\"Name or Number can not be empty\");\n      return;\n    }\n    const oldPersonIdx = persons.findIndex((person) => person.name === newName);\n    if (oldPersonIdx !== -1) {\n      if (\n        window.confirm(\n          `${newName} is already existed in phonebook, replace the old number with new one?`\n        )\n      ) {\n        console.log(\"oldPersonIdx\", oldPersonIdx);\n\n        personService\n          .update(persons[oldPersonIdx].id, {\n            name: newName,\n            number: newNumber,\n          })\n          .then((person) => {\n            oldPersons[oldPersonIdx] = {\n              ...oldPersons[oldPersonIdx],\n              ...person,\n            };\n            setPersons(oldPersons);\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setSuccess(`Updated`);\n            setTimeout(() => {\n              setSuccess(\"\");\n            }, 3000);\n          });\n      }\n      return;\n    }\n    personService\n      .create({ name: newName, number: newNumber })\n      .then((person) => {\n        oldPersons.push(person);\n        setPersons(oldPersons);\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setSuccess(`Created`);\n        setTimeout(() => {\n          setSuccess(\"\");\n        }, 3000);\n      });\n  };\n\n  const filteredPersons = () => {\n    return searchKey\n      ? persons.filter((filter) =>\n          filter.name.toLowerCase().includes(searchKey.toLowerCase())\n        )\n      : persons;\n  };\n\n  const handleDelete = ({ id, name }) => {\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\n      personService\n        .delete(id)\n        .then(() => {\n          const updatedPerson = persons.filter((person) => person.id !== id);\n          setPersons(updatedPerson);\n        })\n        .catch(() => {\n          setError(`Something went wrong`);\n          setTimeout(() => {\n            setError(\"\");\n          }, 3000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessToast message={success} />\n      <ErrorToast message={error} />\n      <Filter\n        value={searchKey}\n        handleChange={(event) => setSearchKey(event.target.value)}\n      />\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={(event) => setNewName(event.target.value)}\n        handleNumberChange={(event) => setNewNumber(event.target.value)}\n        handleSubmit={handleAddName}\n      />\n      <Persons persons={filteredPersons()} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}